library("Metrics")
library(lattice) 
library(corpcor)
library(ggplot2)
library(caret)
library(car)

# Read the dataset
mydata <- read.csv("C:\\SPARKS\\Book1.csv", header=TRUE)

# BOX PLOT
boxplot(mydata$Scores)
hist(mydata$Scores)

# box plot for hrs
boxplot(mydata$Hours)
hist(mydata$Hours)

# the hours and scores are normal distribution

#Check, Normal QQ plot, Histogram and transform if necessary

#Scatter Plot matirix
pairs(mydata[],col="dodgerblue4",pch=20)
# both are varying linearly

#Correlation Matrix
cor(mydata[])
# they are highly related

#Create Training and testing data set

set.seed(121)
train = sample(1:nrow(mydata),nrow(mydata)/2)
test = -train
training_data = mydata[train,]
testing_data = mydata[test,]
testing_scores = testing_data$Scores


#create model
model<-lm(Scores~ .,data=training_data)
summary(model)


# Confidence Interval for the slopes
confint(model,level=0.95)

# Deletion Diagnostics : 

influence.measures(model)
par("mar")
par(mar=c(1,1,1,1))
influenceIndexPlot(model, id.n=3) # Index Plots of the influence measures

# Four PLots like Normal QQPlo,.......
par(mfrow=c(2,2))
plot(model)

#predict values
new_predict = predict.lm(model,testing_data,type = 'response')

#Error estimation
rmse(testing_scores,new_predict)
mape(testing_scores,new_predict)


# NEW MODEL

newhours=training_data$Hours^3
data1=data.frame(newhours,training_data)
data1=data1[,-2]
model1<-lm(Scores~newhours,data=data1)
summary(model1)
testing_data=testing_data[,-2]
testing_data=data.frame(testing_data)
#predict values
new_predict1 = predict.lm(model1,testing_data,type = 'response')

# final model is model 1
